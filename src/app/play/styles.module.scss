.gameMat {
  position: relative;
  width: 1122px;
  height: 562px;
  padding: 44px 12px;
  background-image: url("../../../public/images/board.png");
}

.score {
  width: 342px;
  height: 102px;
  padding: 20px 30px 14px 78px;

  img {
    margin-left: -5px;

    &:first-child {
      margin-left: 0;
    }

    &:nth-child(6) {
      margin-left: 80px;
    }
  }
}

.rules {
  width: 342px;
  height: 102px;
  padding-top: 5px;
  padding-left: 35px;

  select {
    width: 210px;
  }
}

.ruleSelect {
  width: 100px;
}

.player {
  width: 342px;
  height: 372px;

  select {
    margin: 0 auto;
    max-width: 300px;
  }
}

.startButton {
  position: absolute;;
  width: 1098px;
  height: 474px;

  // Don't let the container eat pointer events from underlying elements
  pointer-events: none;

  button {
    pointer-events: all;
  }
}

.message {
  position: absolute;
  width: 1098px;
  height: 474px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 1rem;
  z-index: 2;

  img {
    position: absolute;
    margin: 190px 249px;
  }
}

.turnIndicator {
  position: absolute;
  top: 67px;
  opacity: 0;
  transition: opacity 0.5s;
}

.blueTurn {
  left: 36px;
}

.redTurn {
  right: 36px;
}

.activeTurn {
  opacity: 1;
  transition: opacity 0.5s;
}

.board {
  width: 438px;
  height: 474px;
  padding: 32px 3px;
}

@keyframes flip {
  0%   { transform: rotateY(0deg) }
  50%  { transform: rotateY(90deg)}
  100% { transform: rotateY(0deg) }
}

.playSquare {
  width: 136px;
  height: 136px;

  img {
    margin: 4px 16px;
  }

  // Multiple animation classes ensure the animation plays
  // if the card flips back to back.
  &.redFlip, &.blueFlip img {
    animation: flip 0.5s;
  }
}

.playCard {
  transition: 0.25s filter;

  &.canDrag:hover {
    transform: translateY(-5px);
  }

  img {
    transition: 1s background;
  }
}

.preLoad {
  position: fixed;
  pointer-events: none;

  img {
    opacity: 0;
  }
}